#!/bin/tcsh -f 

#dti_factor: Simple t4_factor wrapper. Takes a dwi_cross_xalign3d_4dfp .dat file and outputs 
#rotations and translations for each volume. 

#usage and argument check
if ( $#argv < 2 ) then
	echo "Usage: dti_factor <input file> <output file> [options]"
	echo ""
	echo "Required Arguments:"
	echo "	<input file>: dwi_cross_xalign.4dfp .dat file"
	echo "	<output file>: Output file name"
	echo ""
	echo "Optional Arguments:"
	echo "	-t: <t> Output number of frames that are translated more than <t> mm."
	echo "	-r: <r> Output number of frames that are rotated more than <r> deg"
	echo "Note: If a frame is translated above -t value in more than one plane, it will only be"
	echo "      counted once. Same rule applies for -r."
	exit 0
endif

#set input to first argument, check to see if its exists
set in_file = $argv[1]; shift
if ( ! -e $in_file ) then
	echo "Could not find $in_file"
	exit 1
endif

set out_file = $argv[1]; shift

#parse optional arguments
while ( $#argv > 0 )
	set flag = $argv[1]; shift
	switch ($flag)
		case -t:
			set trans_thres = `echo "scale=4; $argv[1]" | bc`; @ trans_outliers = 0; shift; breaksw;
		case -r:
			set rot_thres = `echo "scale=4; $argv[1]" | bc`; @ rot_outliers = 0; shift; breaksw;
		default:
			echo "Option $flag not recognized. See usage"
			exit 1
	endsw
end
		
#make output file with correct header
echo "'frame' 'transX(mm)' 'transY(mm)' 'transZ(mm)' 'rotX(deg)' 'rotY(deg)' 'rotZ(deg)'" > $out_file

#get header line for every t4
set line_numbers = `grep -n "volume.*total_t4" $in_file | sed "s/:.*//g"`

#loop through every line number (transformation)
@ count = 1 
while ( $count <= $#line_numbers ) 

	echo "Processing frame $count"
	
	#get starting and end lines for t4
	set line = $line_numbers[$count]
	set start_line = `echo $line + 1 | bc`
	set end_line = `echo $line + 4 | bc`
	
	#extract t4 to temp file
	sed -n "${start_line},${end_line}p" $in_file > temp_${count}t4
	
	#use t4_factor to get translations and rotations from t4
	t4_factor temp_${count}t4 > temp_${count}factor
	
	#extract transplacements and rotations from t4_factor
	set trans = `grep "displacement" temp_${count}factor`
	set rot = `grep "rotation" temp_${count}factor`
	
	#write out translations and rotations to output file
	echo "$count $trans[3] $trans[4] $trans[5] $rot[3] $rot[4] $rot[5]" >> $out_file
	
	set abs_trans = ( )
	foreach i ( $trans[3] $trans[4] $trans[5] )	
		if ( $i[0] < 0 ) @ i = `echo "scale=4; $i * -1" | bc`	
		set abs_trans = ( $abs_trans $i )
	end
	
	set abs_rot = ( )
	foreach i ( $rot[3] $rot[4] $rot[5] )
		if ( $i[0] < 0 ) @ i = `echo "scale=4; $i * -1" | bc`
		set abs_rot = ( $abs_rot $i )
	end	
	
	#test for outlier translations
	if ( $?trans_thres == 1 ) then
		echo $abs_trans[1] $trans_thres
		if ( $abs_trans[1] >= $trans_thres || $abs_trans[2] >= $trans_thres || $abs_trans[3] >= $trans_thres ) @ trans_outliers++
	endif
	
	#test for outlier rotations
	if ( $?rot_thres == 1 ) then
		if ( $abs_rot[1] >= $rot_thres || $abs_rot[2] >= $rot_thres || $abs_rot[3] >= $rot_thres ) @ rot_outliers++
	endif
	
	rm temp_${count}factor temp_${count}t4

	@ count++
end

#print out outliers if user asked
if ( $?trans_thres == 1 ) echo "Translations greater than ${trans_thres}: $trans_outliers"
if ( $?rot_thres == 1 ) echo "Rotations greater than ${rot_thres}: $rot_outliers"
