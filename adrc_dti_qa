#!/bin/tcsh -f

#ADRC DTI QA Script

if ( $#argv != 1 ) then
	echo "Usage: adrc_dti_qa <PATH to Session>"
	echo "Note: Session must of been processed with dwi_proc"
	exit 0
endif

set session_path = $1
set session = $session_path:t
	
cd $session_path

echo "Processing session ${session}:"

###################
#Bad Voxels/Slices#
###################

echo "-> Looking up the number of bad voxels and slices"

#Get bad voxels and calculate the percent of voxels that are bad
#The number of bad voxels is the 5th element and the total number of voxels is in the 8th
set bad_voxels = `grep "bad voxels" dwi_proc.log | tail -1`
set bad_voxel_percent = `echo "scale=5; $bad_voxels[5] / $bad_voxels[8]" | bc`

#Get bad encodes and calculate the percent that are bad (4th arrary element)
#Encodes = number of slices X number of diffusion weight volumes
set bad_encodes = `grep "bad encodes" dwi_proc.log | tail -1`
set slices = `$FSLDIR/bin/fslval Processing/${session}_dti_1.nii.gz dim3`; set dvolumes = 23
set encodes = `echo "$slices * $dvolumes" | bc`
set bad_encode_percent = `echo "scale=5; $bad_encodes[4] / $encodes" | bc`	

###########################
#Brain Edge Residual Error#
###########################
cd Processing

echo "-> Calculating the residual error in the brain edge"

set root = `ls ${session}_dti_1_23_*_b0.nii.gz | sed 's/\.nii\.gz//g'`

#Erode mask to get the inner edge. Subtract eroded mask from non-eroded mask.
#This will get you rough mask of the brain edge.
$FSLDIR/bin/fslmaths ${root}_brain_mask -ero -ero ${root}_brain_mask_eroded
$FSLDIR/bin/fslmaths ${root}_brain_mask -sub ${root}_brain_mask_eroded ${root}_brain_mask_edges

#calculate residual error in the brain edge (include zero voxels)
set edge_mean = `$FSLDIR/bin/fslstats ${session}_dti_xenc_masked_RES -k ${root}_brain_mask_edges -m`

###############################
#Tract Skeleton Residual Error#
###############################

echo "-> Calculating the residual error in the center of the white matter tracts"

#Mask FA with eroded brain mask to remove bright edge
$FSLDIR/bin/fslmaths ${session}_dti_xenc_masked_FA -mas ${root}_brain_mask_eroded \
${session}_dti_xenc_masked_FA_eroded 
$FSLDIR/bin/tbss_skeleton -i ${session}_dti_xenc_masked_FA_eroded -o ${session}_dti_xenc_skeleton
$FSLDIR/bin/fslmaths ${session}_dti_xenc_skeleton -thr .4 -bin ${session}_dti_xenc_skeleton_mask
set skeleton_mean = `$FSLDIR/bin/fslstats ${session}_dti_xenc_masked_RES \
-k ${session}_dti_xenc_skeleton_mask -m`

########
#Motion#
########

echo "-> Estimating motion"

#call dti_factor to get translations and rotations from motion correction
~/scripts/dti_factor ${session}_dti_xenc.4dfp.dat ${session}_dti_xenc_motion.txt

#output motion plots
$FSLDIR/bin/fsl_tsplot -i ${session}_dti_xenc_motion.txt -o ${session}_dti_xenc_trans.png \
-t 'Estimated Translations (mm)' --start=2 --finish=4 -a x,y,z
$FSLDIR/bin/fsl_tsplot -i ${session}_dti_xenc_motion.txt -o ${session}_dti_xenc_rot.png \
-t 'Estimated Rotations (mm)' --start=5 --finish=7 -a x,y,z

#calculate the number of gradients with excessive motion
set outliers = `~/scripts/dti_motion_outliers.py ${session}_dti_xenc_motion.txt`

##########
#Cropping#
##########
cd ../fsldti

echo "-> Estimating brain cropping"

#extract first frame of UNMASKED DTI
$FSLDIR/bin/fslroi ../Processing/${session}_dti_xenc ${session}_dti_xenc_frame0 0 1

#Register DTI to ICBM DWI in MNI 152 Space
$FSLDIR/bin/flirt -in ${session}_dti_xenc_frame0 -ref $FSLDIR/data/atlases/JHU/JHU-ICBM-DWI-2mm \
-cost mutualinfo -omat ${session}_dti_xenc_frame0_to_JHU-ICBM-DWI-2mm.mat \
-out ${session}_dti_xenc_frame0_to_JHU-ICBM-DWI-2mm

#Calculate volume within each MNI mask
set mask_percents = ()
foreach lobe ( cerebellum occipital parietal frontal temporal )
	#Calculate volume within lobe mask for non-zero voxels only
	set volume = `$FSLDIR/bin/fslstats ${session}_dti_xenc_frame0_to_JHU-ICBM-DWI-2mm \
	-k ~/atlas/MNI-maxprob-thr25-2mm_${lobe}_mask.nii.gz -V`
	set mask_volume = `$FSLDIR/bin/fslstats ~/atlas/MNI-maxprob-thr25-2mm_${lobe}_mask.nii.gz -V`
	set mask_percent = `echo "scale=5; $volume[1] / $mask_volume[1]" | bc`	
	set mask_percents = ( $mask_percents $mask_percent )
end

########
#Output#
########
cd ../

echo "-> Outputing QA stats"
echo "'Bad Voxels','% Bad Voxels','Bad Encodes','% Bad Encodes','Edge Residual Error','Skeleton Residual Error','% Cerebellum Mask','% Occipital Mask','% Parietal Mask','% Frontal Volume','% Temporal Volume','Frames with Translations >= 1','Frames with Rotations >= .5'" > ${session}_qc.txt
echo "$bad_voxels[5],$bad_voxel_percent,$bad_encodes[4],$bad_encode_percent,$edge_mean,$skeleton_mean,$mask_percents[1],$mask_percents[2],$mask_percents[3],$mask_percents[4],$mask_percents[5],$outliers[1],$outliers[2]" >> ${session}_qc.txt


	
	
	
	
	
	
	
	
	
	
	
